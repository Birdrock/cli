name: Integration Tests

on:
  push:
    branches:
    - "ga-integration"

# permissions:
#   contents: write

defaults:
  run:
    shell: bash

jobs:
  shared-values:
    name: Shared Values
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.set-go-version.outputs.go-version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - id: set-go-version
      run: |
        echo "::set-output name=go-version::1.17"

  units:
    needs: shared-values
    runs-on: ubuntu-latest
    steps:
    - name: Checkout cli
      uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ needs.shared-values.outputs.go-version }}
    # - name: lint
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
    - name: Linux Unit tests
      run: |
        export TARGET_V7=true
        # export GOPATH=$PWD/gopath
        # export PATH=$GOPATH/bin:$PATH
        export GOFLAGS="-mod=mod"
        # echo "$PWD"
        # echo "$GOPATH"
        # pwd
        # cd $GOPATH/src/code.cloudfoundry.org/cli

        export LC_ALL="en_US.UTF-8"

        go version

        go get -u github.com/onsi/ginkgo/ginkgo
        ginkgo version
        
        # we actually want the grep to exit 1 (i.e., no matches found) here
        set +e
        echo -e "\n Checking that packages have been go formatted..."
        gofmt -l . | grep -v -e ^vendor
        # if we match anything, we have unformatted files
        if [[ $? -eq 0 ]]; then
          echo "Found unlinted files, please run 'make format' and push again."
          exit 1
        fi
        set -e

        make units-full




  # lint:
  #   name: Lint code
  #   runs-on: ubuntu-latest
  #   needs: shared-values
  #   steps:

  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Set up Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: ${{ needs.shared-values.outputs.go-version }}

  #   - name: Run go fmt
  #     run: go fmt && git diff --exit-code

  # units:
  #   name: Units
  #   needs: shared-values
  #   strategy:
  #     matrix:
  #       os:
  #         - ubuntu-latest
  #         - ubuntu-18.04
  #         - macos-latest
  #         - macos-10.15
  #   runs-on: ${{ matrix.os }}
  #   steps:

  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Set up Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: ${{ needs.shared-values.outputs.go-version }}

  #   - name: Set up Test
  #     run: |
  #       go get -u github.com/onsi/ginkgo/ginkgo
  #       go get github.com/onsi/gomega/matchers@v1.10.5

  #   - name: Run Linux Units
  #     run: make units
  #     env:
  #       ACK_GINKGO_RC: true

  # units-windows:
  #   name: Units Windows
  #   strategy:
  #     matrix:
  #       os:
  #         - windows-2022
  #         - windows-2019
  #         - windows-2016
  #   runs-on: ${{ matrix.os }}
  #   needs: shared-values
  #   defaults:
  #     run:
  #       shell: pwsh
  #   steps:

  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Set up Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: ${{ needs.shared-values.outputs.go-version }}

  #   - name: Set up Test
  #     run: |
  #       go get -u github.com/onsi/ginkgo/ginkgo
  #       go get github.com/onsi/gomega/matchers@v1.10.5

  #   - name: Get build-time dependencies
  #     run: |
  #       choco install --no-progress --limit-output -y make

  #   - name: Run Windows Units
  #     env:
  #       ACK_GINKGO_RC: true
  #     run: >
  #       # Get-Command make
  #       # Get-Item Makefile
  #       # make units-non-plugin

  #       ginkgo -r -p
  #       -randomizeAllSpecs
  #       -randomizeSuites
  #       -skipPackage integration,cf\ssh,plugin,cf\actors\plugin,cf\commands\plugin,cf\actors\plugin,util\randomword
  #       -flakeAttempts=2

# vim: set sw=2 ts=2 sts=2 et tw=78 foldlevel=2 fdm=indent nospell:
