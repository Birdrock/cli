name: Integration Tests

on:
  push:
    branches:
    - "ga-integration"

# permissions:
#   contents: write

defaults:
  run:
    shell: bash

jobs:
  shared-values:
    name: Shared Values
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.set-go-version.outputs.go-version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - id: set-go-version
      run: |
        echo "::set-output name=go-version::1.17"

  units:
    needs: shared-values
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout cli
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ needs.shared-values.outputs.go-version }}
    # - name: lint

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3

    - name: Unit tests
      run: |
        export TARGET_V7=true
        export GOFLAGS="-mod=mod"
        export LC_ALL="en_US.UTF-8"

        go version
        go get -u github.com/onsi/ginkgo/ginkgo
        ginkgo version
        
        # we actually want the grep to exit 1 (i.e., no matches found) here
        set +e
        echo -e "\n Checking that packages have been go formatted..."
        gofmt -l . | grep -v -e ^vendor
        # if we match anything, we have unformatted files
        if [[ $? -eq 0 ]]; then
          echo "Found unlinted files, please run 'make format' and push again."
          exit 1
        fi
        set -e

        make units-full
