name: Release - DEV

env:
  REUSE_ARTIFACT_WORKFLOW: build.yml
  REUSE_ARTIFACT_RUN_ID: 1879559877 #155

on:
  push:
    branches:
    - gha-allplatforms
    - gh-actions
    - master
    - main
    - "v?"
    tags:
    - 'v0.0.*-test'
    - 'v8.100.*-test'
    - 'v8.0.1*-test'

jobs:
  s3-upload:
    runs-on: ubuntu-latest
    # needs:
      # - windows-signing
    environment: DEV
    permissions:
      actions: read
    steps:
    - name: Download previous artifacts
      uses: pivotalsoftware/action-download-artifact@v2
      with:
        workflow: ${{ env.REUSE_ARTIFACT_WORKFLOW }}
        run_id: ${{ env.REUSE_ARTIFACT_RUN_ID }}
        path: signed
    - name: debug
      run: ls -R signed

    ##############################################
    # Consider moving
    # might be a windows workflow responsibility #
    ##############################################

    - name: name windows edge artifact
      if: ${{ github.ref_type != 'tag' }}
      # set environment vars for subsequent steps. see: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
      run: |
        echo "INSTALLER_RELEASE_VERSION=edge" >> $GITHUB_ENV
        echo "INSTALLER_ZIP_FILENAME=cf8-cli-installer_edge_winx64.zip" >> $GITHUB_ENV
        # echo "BINARY_ZIP_FILENAME: " >> ENV
    - name: name windows release artifact
      if: ${{ github.ref_type == 'tag' }}
      # set environment vars for subsequent steps. see: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
      run: |
        # strip leading v to go from tag -> semver
        INSTALLER_RELEASE_VERSION=$(echo ${{ github.ref_name }} | tr -d v)
        echo "INSTALLER_RELEASE_VERSION=${INSTALLER_RELEASE_VERSION}" >> $GITHUB_ENV
        echo "INSTALLER_ZIP_FILENAME=cf8-cli-installer_${INSTALLER_RELEASE_VERSION}_winx64.zip" >> $GITHUB_ENV
        cat $GITHUB_ENV
    - name: zip windows artifact
      run: |
        pushd signed/cf8-cli-installer_winx64
          zip "$INSTALLER_ZIP_FILENAME" *
          ls
        popd

    ##############################################

    - name: rearrange artifacts before upload
      run: |
        mkdir upload
        cp -t upload  \
          signed/cf-cli-linux-rpm-packages/cf*rpm \
          signed/cf-cli-linux-deb-packages/cf*deb \
          signed/cf-cli-macos-packages/cf*pkg \
          signed/cf8-cli-installer_winx64/cf*zip

    - name: Upload installers to CLAW S3 bucket
      if: ${{ github.ref_type == 'tag' }}
      # forked for security considerations
      uses: pivotalsoftware/s3-sync-action@v0.5.2 #pinned to no-default-region change
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        SOURCE_DIR: upload
        DEST_DIR: "v8-cf-cli-releases/releases/v${{ env.INSTALLER_RELEASE_VERSION }}"

    - name: Instruct human to update CLAW
      run: |
        echo "Please go to https://github.com/cloudfoundry/CLAW/blob/develop/claw-variables.yml and add the following line to the file:"
        echo
        echo "- ${INSTALLER_RELEASE_VERSION}"

    - name: list S3
      uses: docker://amazon/aws-cli:latest
      with:
        args: s3 ls --region us-east-1 "${{ env.AWS_S3_BUCKET }}/v8-cf-cli-releases/releases/"
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        INSTALLER_RELEASE_VERSION: ${{ env.INSTALLER_RELEASE_VERSION }}


  github-release-draft:
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
    # needs: windows-signing
    steps:
    - name: Download previous artifacts
      uses: pivotalsoftware/action-download-artifact@v2
      with:
        workflow: ${{ env.REUSE_ARTIFACT_WORKFLOW }}
        run_id: ${{ env.REUSE_ARTIFACT_RUN_ID }}
        path: signed
    - name: debug
      run: ls -R signed

    - name: Create draft release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        fail_on_unmatched_files: true
        files: |
          signed/cf-cli-linux-rpm-packages/cf*rpm
          signed/cf-cli-linux-deb-packages/cf*deb
          signed/cf-cli-macos-packages/cf*pkg
          signed/cf-windows-binaries/*.exe
          signed/cf8-cli-installer_winx64/cf8_installer.exe

  # list_s3:
  #   environment: DEV
  #   runs-on: ubuntu-latest
  #   needs: s3-upload
  #   steps:
  #     - uses: docker://amazon/aws-cli:latest
  #       with:
  #         args: s3 ls --region us-east-1 "${{ env.AWS_S3_BUCKET }}/v8-cf-cli-releases/releases/v${{ env.INSTALLER_RELEASE_VERSION }}"
  #       env:
  #         AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
